@model List<VideoFileModel>

@{
    ViewData["Title"] = "Video Catalogue";
}

<div id="errorMessage" class="alert alert-danger" style="display: none;"></div>

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home" type="button"
            role="tab" aria-controls="home" aria-selected="true">Home</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="upload-tab" data-bs-toggle="tab" data-bs-target="#upload" type="button" role="tab"
            aria-controls="upload" aria-selected="false">Upload</button>
    </li>
</ul>

<div class="tab-content mt-2" id="myTabContent">
    <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
        <div id="catalogue">
            <h2>Video Catalogue</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th>File Name</th>
                        <th>File Size</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var file in Model)
                    {
                        <tr>
                            <td>
                                <a href="#" class="play-video" data-filename="@file.FileName">@file.FileName</a>
                            </td>
                            <td>@(file.FileSize / 1024 / 1024) MB</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div id="videoPlayer" style="display: none;">
                <h2>Video Player</h2>
                <div class="video-container">
                    <video id="player" controls></video>
                </div>
            </div>

        </div>
    </div>
    <div class="tab-pane fade" id="upload" role="tabpanel" aria-labelledby="upload-tab">
        <div id="uploadForm">
            <h2>Upload Video</h2>
            <form id="videoUploadForm" enctype="multipart/form-data">
                <div class="mb-3">
                    <label for="videoFiles" class="form-label">Select video files to upload</label>
                    <input class="form-control" type="file" id="videoFiles" name="files" multiple accept=".mp4">
                </div>
                <button type="submit" id="uploadButton" class="btn btn-primary">
                    <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                    Upload
                </button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <style>
        .video-container {
            width: 640px;
            height: 360px;
            max-width: 100%;
            margin: 0 auto;
            background-color: #000;
        }

        .video-container video {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }
    </style>
    <script>
        $(document).ready(function () {
            const $catalogue = $('#catalogue');
            const $videoPlayer = $('#videoPlayer');
            const $player = $('#player');
            const $uploadForm = $('#videoUploadForm');
            const $errorMessage = $('#errorMessage');
            const $uploadButton = $('#uploadButton');
            const $spinner = $uploadButton.find('.spinner-border');

            $uploadForm.on('submit', function (e) {
                e.preventDefault();
                $errorMessage.hide();
                $uploadButton.prop('disabled', true);
                $spinner.removeClass('d-none');

                const formData = new FormData(this);

                $.ajax({
                    url: '@Url.Action("Upload", "Home")',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        if (data.success) {
                            location.reload();
                        } else {
                            showError(data.message);
                        }
                    },
                    error: function (xhr) {
                        showError(xhr.responseText);
                    },
                    complete: function () {
                        $uploadButton.prop('disabled', false);
                        $spinner.addClass('d-none');
                    }
                });
            });

            function showError(message) {
                try {
                    const response = JSON.parse(message);
                    $errorMessage.text('Error: ' + response.message).show();
                } catch (e) {
                    $errorMessage.text(`
                        An unexpected error occurred (possibly file exceeds 200MB by a lot so the connection is killed by the server.
                        This can be manually checked in the frontend, but deliberately not done to show the backend validation
                        ) Please try again later.
                    `).show();
                }
            }

            $catalogue.on('click', '.play-video', function () {
                const fileName = $(this).data('filename');
                $player.attr('src', '/media/' + fileName);
                $videoPlayer.show();
                $player[0].play();
            });
        });
    </script>
}
